name: Deploy to Cloud Run with Cloud SQL Database

on:
  push:
    branches: [ master ]

jobs:

    deploy:

        name: Setup Gcloud Account
        runs-on: ubuntu-latest
        env:
          IMAGE_NAME: gcr.io/sunlit-theory-381720/fdsfds
          REGION: fdsfds
          PROJECT_ID: sunlit-theory-381720
          VPC_CONNECTOR_NAME: default-connector
          SQL_INSTANCE_NAME: test-instance
          DATABASE_NAME: wibble
          SERVICE_NAME: fdsfds

        steps:
        - name: Setup GCloud
          uses: google-github-actions/setup-gcloud@v0
          with:
            project_id: ${{ env.PROJECT_ID }}
            service_account_email: ${{ secrets.GCP_EMAIL }}
            service_account_key: ${{ secrets.GCP_CREDENTIALS }}

        - name: Get SQL Instance IP
          id: getsqlip
          run: echo ::set-output name=SQL_IP_ADDRESS::$(gcloud sql instances list --filter=name:$SQL_INSTANCE_NAME --format="value(PRIVATE_ADDRESS)")

        - name: Checkout repository
          uses: actions/checkout@v2

        - name: Configure Docker
          run: gcloud auth configure-docker --quiet

        - name: Build Docker image
          run: docker build . -t $IMAGE_NAME

        - name: Push Docker image
          run: docker push $IMAGE_NAME

        - name: Create Database
          run: gcloud sql databases create $DATABASE_NAME --instance=$SQL_INSTANCE_NAME

        - name: Deploy to Cloud Run
          run: gcloud run deploy $SERVICE_NAME --image $IMAGE_NAME --platform managed --add-cloudsql-instances=$PROJECT_ID:$REGION:$SQL_INSTANCE_NAME --vpc-connector=$VPC_CONNECTOR_NAME --vpc-egress=all-traffic --set-env-vars DATABASE_HOST=${{ steps.getsqlip.outputs.SQL_IP_ADDRESS }} --region=$REGION